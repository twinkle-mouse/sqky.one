---
import type { HTMLAttributes } from "astro/types";

export type Props = HTMLAttributes<"span"> & {
    e: string;
};

const { e, ...props } = Astro.props;

// this is the most evil code i could've ever done
export function getEmojiUrl(e: string) {
    let codes: string[] = [];
    const codesList = [codes];

    for (let i = 0; ; i++) {
        const code = e.codePointAt(i);
        if (!code) break;

        const encoded = code.toString(16);
        if (encoded == "200d") {
            codes = [];
            codesList.push(codes);
            continue;
        }
        if (encoded.startsWith("fe0")) {
            continue;
        }

        codes.push(encoded);
    }

    const path = codesList.map((codes) => codes.filter((_, index) => index % 2 == 0).join("_")).join("_200d_");
    return `/noto-emoji/emoji_u${path}.svg`;
}

const url = getEmojiUrl(e);
---

<span {...props}>
    {e}
</span>

<style define:vars={{ url: `url(${url})` }}>
    span {
        position: relative;

        display: inline-block;
        width: 1.25em;
        height: 1.25em;
        vertical-align: text-bottom;
        overflow: hidden;
    }

    span,
    span::selection,
    span::-moz-selection {
        color: transparent;
    }

    span::after {
        content: "";

        position: absolute;
        top: 0;
        left: 0;

        width: 1.25em;
        height: 1.25em;

        background-size: contain;
        background: var(--url) no-repeat;
    }
</style>
